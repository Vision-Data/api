/auth/{provider}:
  get:
    tags:
      - Auth
    description: Login or register with a third-party provider.
    summary: Login or register with a third-party provider.
    operationId: auth
    parameters:
      - name: provider
        in: path
        description: The name of the provider. `google` or `github`
        required: true
        schema:
          type: string
          example: google
    responses:
      200:
        description: Successful login or registration.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Auth'
      400:
        description: Invalid request.
      500:
        description: Internal server error.

/register:
  post:
    tags:
      - Auth
    description: Register a new user.
    summary: Register a new user.
    operationId: register
    requestBody:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Register'
    responses:
      200:
        description: Successful registration.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Auth'
      422:
        description: Validation error.
      500:
        description: Internal server error.

/login:
  post:
    tags:
      - Auth
    description: Login a user.
    summary: Login a user.
    operationId: login
    requestBody:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Login'
    responses:
      200:
        description: Successful login.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Auth'
      400:
        description: Invalid request.
      422:
        description: Validation error.
      500:
        description: Internal server error.

/logout:
  post:
    tags:
      - Auth
    security: []
    description: Logout the current user.
    summary: Logout the current user.
    operationId: logout
    responses:
      204:
        description: Successful logout.
        content:
          application/json:
            example:
              revoked: true
      400:
        description: Invalid request.
      401:
        description: Unauthorized.
      500:
        description: Internal server error.

components:
  schemas:
    Auth:
      type: object
      properties:
        token:
          type: string
          description: The JWT token.
          example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c
        user:
          $ref: '#/components/schemas/User'

    User:
      type: object
      properties:
        id:
          type: string
          description: The user's unique identifier.
          example: 5f1d7999-05d2-4b45-94bb-126bd27a5011
        email:
          type: string
          description: The user's email address.
          example: john@doe.com
        fullName:
          type: string
          description: The user's full name.
          example: John Doe
        avatarUrl:
          type: string
          description: The user's avatar URL.
          example: https://avatars0.githubusercontent.com/u/1234567?v=4
        createdAt:
          type: string
          format: date-time
          description: The date and time the user was created.
        updatedAt:
          type: string
          format: date-time
          description: The date and time the user was last updated.

    Register:
      type: object
      properties:
        email:
          type: string
          description: The user's email address.
          example: john@doe.com
        full_name:
          type: string
          description: The user's full name.
          example: John Doe
        password:
          type: string
          description: The user's password.
          example: supersecretpassword

    Login:
      type: object
      properties:
        email:
          type: string
          description: The user's email address.
          example: john@doe.com
        password:
          type: string
          description: The user's password.
          example: supersecretpassword
